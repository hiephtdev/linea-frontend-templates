import type { Account } from 'viem/accounts/types.js';
import type { Client } from 'viem/clients/createClient.js';
import type { Transport } from 'viem/clients/transports/createTransport.js';
import type { ErrorType } from 'viem/errors/utils.js';
import type { Chain } from 'viem/types/chain.js';
import type { RequestErrorType } from 'viem/utils/buildRequest.js';
import { type NumberToHexErrorType } from 'viem/utils/encoding/toHex.js';
export type SwitchChainParameters = {
    /** ID of Chain to switch to */
    id: Chain['id'];
};
export type SwitchChainErrorType = NumberToHexErrorType | RequestErrorType | ErrorType;
/**
 * Switch the target chain in a wallet.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html
 * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)
 *
 * @param client - Client to use
 * @param parameters - {@link SwitchChainParameters}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet, optimism } from 'viem/chains'
 * import { switchChain } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * await switchChain(client, { id: optimism.id })
 */
export declare function switchChain<TChain extends Chain | undefined, TAccount extends Account | undefined = undefined>(client: Client<Transport, TChain, TAccount>, { id }: SwitchChainParameters): Promise<void>;
//# sourceMappingURL=switchChain.d.ts.map